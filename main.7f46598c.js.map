{"version":3,"sources":["main.js"],"names":["window","addEventListener","document","querySelector","classList","add","body","getGesturePointFromEvent","evt","point","targetTouches","x","clientX","y","clientY","console","log","handleGestureStart","PointerEvent","handleGestureMove","handleGestureEnd","preventDefault","touches","length","target","setPointerCapture","pointerId","initialTouchPos","style","transition","bind","greeting","string","textContent","split","i","innerHTML","char","timer","setInterval","onTick","querySelectorAll","complete","show","clearInterval","ticking","isFirefox","test","navigator","userAgent","isIe","scrollSensitivitySetting","slideDurationSetting","currentSlideNumber","totalSlideNumber","$","firstSlide","lastSlide","nxt_btn","prv_btn","git_btn","go_github","location","href","slide_down","nextItem","remove","slideDurationTimeout","slide_up","previousItem","parallax","e","delta","detail","deltaY","wheelDelta","slideDuration","setTimeout","mousewheelEvent","eq","removeClass","addClass","_","throttle"],"mappings":"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","file":"main.7f46598c.js","sourceRoot":"..","sourcesContent":["window.addEventListener('load',()=>{\n  let load_background = document.querySelector('.load_background'); \n  load_background.classList.add('hide'); \n  }\n)\nconst body = document.querySelector('body');\nbody.addEventListener('touchstart',function(){\n  console.log('터치 됨');\n  this.handleGestureStart, true\n})\nfunction getGesturePointFromEvent(evt) {\n  var point = {};\n\n  if(evt.targetTouches) {\n    // Prefer Touch Events\n    point.x = evt.targetTouches[0].clientX;\n    point.y = evt.targetTouches[0].clientY;\n  } else {\n    // Either Mouse event or Pointer Event\n    point.x = evt.clientX;\n    point.y = evt.clientY;\n  }\n\n  return point;\n}\nif (window.PointerEvent) {\n  // Add Pointer Event Listener\n  body.addEventListener('pointerdown', this.handleGestureStart, true);\n  body.addEventListener('pointermove', this.handleGestureMove, true);\n  body.addEventListener('pointerup', this.handleGestureEnd, true);\n  body.addEventListener('pointercancel', this.handleGestureEnd, true);\n} else {\n  // Add Touch Listener\n  body.addEventListener('touchstart', this.handleGestureStart, true);\n  body.addEventListener('touchmove', this.handleGestureMove, true);\n  body.addEventListener('touchend', this.handleGestureEnd, true);\n  body.addEventListener('touchcancel', this.handleGestureEnd, true);\n\n  // Add Mouse Listener\n  body.addEventListener('mousedown', this.handleGestureStart, true);\n}\nthis.handleGestureStart = function(evt) {\n  evt.preventDefault();\n\n  if(evt.touches && evt.touches.length > 1) {\n    return;\n  }\n\n  // Add the move and end listeners\n  if (window.PointerEvent) {\n    evt.target.setPointerCapture(evt.pointerId);\n  } else {\n    // Add Mouse Listeners\n    document.addEventListener('mousemove', this.handleGestureMove, true);\n    document.addEventListener('mouseup', this.handleGestureEnd, true);\n  }\n\n  initialTouchPos = getGesturePointFromEvent(evt);\n\n  body.style.transition = 'initial';\n}.bind(this);\n\n\n\n  // text 나타나기\n  const greeting = document.querySelector('.greeting');\n  const string = greeting.textContent;\n  const split = string.split('');\n  greeting.textContent = \"\"; \n  for(let i = 0; i <split.length; i++){\n      greeting.innerHTML += '<span>'+split[i]+'</span>'\n  } \n  let char = 0;\n  let timer =setInterval(onTick, 80); \n  function onTick(){\n      const span = greeting.querySelectorAll('span')[char];\n      span.classList.add('fade');\n      char++\n      if(char === split.length){\n          complete();\n          show();\n          return;\n      }\n  }\n  function complete(){\n      clearInterval(timer);\n      timer = null;\n  } \n  // text 나타난뒤 svg 나타나기\n  function show(){\n      const down_bar = document.querySelector('.down_bar');  \n      down_bar.classList.add('show');\n  } \n// parallax start\nvar ticking = false;  \nvar isFirefox = (/Firefox/i.test(navigator.userAgent));\nvar isIe = (/MSIE/i.test(navigator.userAgent)) || (/Trident.*rv\\:11\\./i.test(navigator.userAgent));\nlet scrollSensitivitySetting = 30; //Increase/decrease this number to change sensitivity to trackpad gestures (up = less sensitive; down = more sensitive) \nlet slideDurationSetting = 800; //Amount of time for which slide is \"locked\"\nlet currentSlideNumber = 0;\nlet totalSlideNumber = $(\".sections\").length; \nlet firstSlide = totalSlideNumber*0;\nlet lastSlide = totalSlideNumber-1;  \nlet nxt_btn = document.querySelector('.next_btn');\nlet prv_btn = document.querySelector('.prev_btn');\nconst git_btn = document.querySelector('.github');\nfunction go_github(){\n  location.href = \"https://github.com/adele007fall/adele007fall.github.io\";\n}\nconst slide_down=function(){\n  ticking = true;\n  if (currentSlideNumber !== lastSlide) {\n    currentSlideNumber++;\n    nextItem(); \n    if (currentSlideNumber == lastSlide) { \n      nxt_btn.classList.add('un_btn');\n    }\n    if (currentSlideNumber !== firstSlide) {\n      prv_btn.classList.remove('un_btn');\n    }\n  }\n  slideDurationTimeout(slideDurationSetting); \n}\nconst slide_up=function(){\n  ticking = true;\n  if (currentSlideNumber == lastSlide) {\n    nxt_btn.classList.remove('un_btn');\n  } \n  if (currentSlideNumber !== 0) { \n    currentSlideNumber--; \n    if (currentSlideNumber == firstSlide) {\n      prv_btn.classList.add('un_btn');\n    }\n    previousItem();\n  }\n  slideDurationTimeout(slideDurationSetting); \n}\nnxt_btn.addEventListener('click',()=>{\n  if (ticking != true) { \n   slide_down();\n  } \n});\nprv_btn.addEventListener('click',()=>{\n  if(ticking != true){\n    slide_up();\n  }\n})\nfunction parallax(e) {\n    if (isFirefox) {\n        //Set delta for Firefox\n        delta = e.detail * (-120);\n      } else if (isIe) {\n        //Set delta for IE\n        delta = -e.deltaY;\n      }else{\n        //Set delta for all other browsers\n        delta = e.wheelDelta;\n      } \n    if (ticking != true) {\n      if ( delta <= -scrollSensitivitySetting) {\n        //Down scroll\n        slide_down();\n      } \n      if (delta >= scrollSensitivitySetting) {\n        //Up scroll\n        slide_up();\n      } \n    } \n}\n\n\n// ------------- SET TIMEOUT TO TEMPORARILY \"LOCK\" SLIDES ------------- //\nfunction slideDurationTimeout(slideDuration) {\n    setTimeout(function() {\n      ticking = false;\n    }, slideDuration);\n  }\n  \n// ------------- ADD EVENT LISTENER ------------- //\nvar mousewheelEvent = isFirefox ? \"DOMMouseScroll\" : \"wheel\";\nwindow.addEventListener(mousewheelEvent, _.throttle(parallax, 60), false);\n \n// ------------- SLIDE MOTION ------------- //\nfunction nextItem() {\n    var $previousSlide = $(\".sections\").eq(currentSlideNumber - 1);\n    $previousSlide.removeClass(\"up-scroll\").addClass(\"down-scroll\");\n} \nfunction previousItem() {\n    var $currentSlide = $(\".sections\").eq(currentSlideNumber);\n    $currentSlide.removeClass(\"down-scroll\").addClass(\"up-scroll\");\n}  \nprv_btn.addEventListener('click',()=>{\n    previousItem();\n    console.log()\n})\n"]}